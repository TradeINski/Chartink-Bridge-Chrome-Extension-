window.onload=function(){changeURL();addCopyBtOnTradingView()};const dateHeader=`### ${new Date().toLocaleDateString("en-GB", {
  day: "numeric",
  month: "short",
  year: "numeric",
})}`;function changeURL(){chrome.runtime.sendMessage({message:"getChartRedirectState"},function(response){if(!response.chartRedirectState){return}
var links=document.querySelectorAll('a[href^="/stocks"]');for(var i=0;i<links.length;i++){links[i].href=`https://in.tradingview.com/chart/?symbol=NSE:${compatabilitySymbolFunc(links[i].href)}`}});chrome.runtime.sendMessage({message:"getChartRedirectState"},function(response){var links=[];if(response.chartRedirectState){links=document.querySelectorAll('a[href^="https://in.tradingview.com/chart/?symbol=NSE:"]')}else{links=document.querySelectorAll('a[href^="/stocks"]')}})}
function compatabilitySymbolFunc(url){if(url.includes("stocks-new")){return new URL(url).searchParams.get("symbol")}
return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(".html"))}
const observer=new MutationObserver(function(mutations){const hasAddedNodes=mutations.some(m=>m.addedNodes.length>0);if(!hasAddedNodes)return;chrome.runtime.sendMessage({message:"getWidgetCopyState"},function(response){if(response.widgetCopyState){changeURL();addEmojiCopyButtonsToTickers()}else{changeURL();addCopyBtOnTradingView()}})});observer.observe(document.body,{childList:!0,subtree:!0});const screenerButtonsClass="btn btn-default btn-primary";const addCopyToTradingViewButton=(buttonText,buttonClass,buttonId,buttonFunction)=>{const screenerButtons=document.getElementsByClassName(screenerButtonsClass);if(screenerButtons.length===0)return;const screenerButtonsParent=screenerButtons[0].parentNode;const screenerButton=document.createElement("button");screenerButton.innerHTML=buttonText;screenerButton.className=buttonClass;screenerButton.id=buttonId;screenerButton.onclick=buttonFunction;screenerButtonsParent.appendChild(screenerButton)};addCopyToTradingViewButton("Bridge","btn btn-default btn-primary","add-to-watchlist",copyAllTickersOnScreen);function getPaginationLength(){const paginationList=document.getElementsByClassName("pagination")[0].getElementsByTagName("li");return paginationList[paginationList.length-2].innerText}
function nextPage(){document.evaluate("//a[text()='Next']",document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue.click()}
function getNumberOfStocks(){const el=document.getElementsByClassName("dataTables_info")[0];const innerText=el.innerText;const numberOfStocks=innerText.match(/\d+/)[0];return numberOfStocks}
const delay=(t)=>{return new Promise((res)=>setTimeout(res,t))};async function copyAllTickersOnScreen(){chrome.runtime.sendMessage({message:"getChartRedirectState"},async function(response){if(response.chartRedirectState){let allTickersArray=[];let allTags=[];const numberOfPages=getPaginationLength();for(let i=0;i<numberOfPages;i++){if(i>0){await delay(500)}
allTags.push(document.querySelectorAll('a[href^="https://in.tradingview.com/chart/?symbol=NSE:"]'));nextPage()}
const allTickers=allTags.map((tag)=>Array.from(tag)).flat();allTickers.forEach((ticker)=>{allTickersArray.push(replaceSpecialCharsWithUnderscore(extracrtSymbolFromURL(ticker.href)))});allTickersArray=addColonNSEtoTickers(allTickersArray);createFakeTextAreaToCopyText([...removeDuplicateTickers(allTickersArray)].join(", "));replaceButtonText("add-to-watchlist");return}
let allTickersArray=[];let allTags=[];const numberOfPages=getPaginationLength();console.log(numberOfPages);for(let i=0;i<numberOfPages;i++){if(i>0){await delay(200)}
allTags.push(document.querySelectorAll('a[href^="/stocks-new"]'));nextPage()}
console.log(allTags);const allTickers=allTags.map((tag)=>Array.from(tag)).flat();allTickers.forEach((ticker)=>{allTickersArray.push(replaceSpecialCharsWithUnderscore(extractSymbolFromTradingViewURL(ticker.href)))});allTickersArray=addColonNSEtoTickers(allTickersArray);createFakeTextAreaToCopyText([...removeDuplicateTickers(allTickersArray)].join(", "));replaceButtonText("add-to-watchlist")})}
function replaceButtonText(buttonId){const button=document.getElementById(buttonId);if(!button)return;button.innerHTML="Copied to clipboard ðŸ“‹";setTimeout(()=>{button.innerHTML="Bridge"},2000)}
function createFakeTextAreaToCopyText(text){chrome.storage.local.get(['copyButtonVisibility'],(result)=>{const tickers=text.split(',').map(item=>item.trim()).filter(item=>item&&!item.includes('###'));const tickersToCopy=result.copyButtonVisibility?tickers.slice(0,30):tickers;const textToCopy=`${dateHeader},${tickersToCopy.join(', ')}`;const fakeTextArea=document.createElement("textarea");fakeTextArea.value=textToCopy;document.body.appendChild(fakeTextArea);fakeTextArea.select();document.execCommand("copy");document.body.removeChild(fakeTextArea);chrome.storage.local.set({lastCopiedTickers:tickers},()=>{console.log('Tickers saved to storage:',tickersToCopy)})})}
function removeDuplicateTickers(tickers){return[...new Set(tickers)]}
function addColonNSEtoTickers(tickers){return tickers.map((ticker)=>`NSE:${ticker}`)}
function replaceSpecialCharsWithUnderscore(ticker){return ticker.replace(/[^a-zA-Z0-9]/g,"_")}
function handleDashboardCopy(tickers){const cleanedTickers=tickers.map(ticker=>{const cleanTicker=ticker.replace(/^NSE:/i,'');return `NSE:${cleanTicker}`});chrome.storage.local.get(['copyButtonVisibility'],(result)=>{const tickersToCopy=result.copyButtonVisibility?cleanedTickers.slice(0,30):cleanedTickers;const symbolsText=tickersToCopy.join(", ");copyToClipboard(symbolsText);chrome.storage.local.set({lastCopiedTickers:cleanedTickers},()=>{console.log('Widget full tickers saved, clipboard limited:',tickersToCopy)})})}
const addCopyBtOnTradingView=()=>{const copyBts=document.querySelectorAll('div[title="Copy widget"]');copyBts.forEach((copyBt)=>{copyBt.addEventListener("click",(e)=>{e.stopImmediatePropagation();e.preventDefault();try{let parent=copyBt;let table=null;for(let i=0;i<10;i++){parent=parent.parentElement;if(!parent)break;table=parent.querySelector("table");if(table)break}
if(!table)throw new Error("Ticker table not found");const anchors=table.querySelectorAll("a[href]");const tickerList=[];anchors.forEach((a)=>{let symbol=null;if(a.href.includes("symbol=NSE:")){symbol=a.href.split("symbol=NSE:")[1]}else if(a.href.includes("/stocks/")){symbol=a.href.split("/stocks/").pop().replace(".html","")}
if(symbol)tickerList.push(`NSE:${symbol}`);});if(tickerList.length===0){alert("No tickers found to copy.");return}
chrome.storage.local.get(['copyButtonVisibility'],(result)=>{const tickersToCopy=result.copyButtonVisibility?tickerList.slice(0,30):tickerList;const symbolsText=tickersToCopy.join(", ");copyToClipboard(symbolsText);chrome.storage.local.set({lastCopiedTickers:tickerList},()=>{console.log("Widget tickers saved:",tickerList)});alert(`Copied ${tickersToCopy.length} tickers ðŸ“‹`)})}catch(error){console.error("Error in widget copy button:",error);alert("Widget copy failed. Please refresh and try again.")}
return!1},!0)})};function copyToClipboard(text){const fakeTextArea=document.createElement("textarea");fakeTextArea.value=text;document.body.appendChild(fakeTextArea);fakeTextArea.select();document.execCommand("copy");document.body.removeChild(fakeTextArea)}
addCopyBtOnTradingView();function removeDotHTML(ticker){return ticker.replace(".html","")}
function extracrtSymbolFromURL(url){const urlParams=new URLSearchParams(new URL(url).search);const symbol=urlParams.get("symbol");return symbol?symbol.split(":")[1]:null}
function extractSymbolFromTradingViewURL(url){if(url.includes("NSE:")){return url.split("/")[4].split(":")[1]}else if(url.includes("/stocks-new")){const urlParams=new URLSearchParams(url);return urlParams.get("symbol")}else if(url.includes("/stocks/")){return url.split("/").pop().replace(".html","")}}
function addEmojiCopyButtonsToTickers(){if(!window.location.href.includes("/dashboard/"))return;const tickerLinks=document.querySelectorAll('a[href*="/stocks/"]:not([href*="https://"])');tickerLinks.forEach((link)=>{if(link.parentElement.classList.contains('ticker-link-wrapper'))return;let ticker=link.getAttribute("href").split("/").pop().replace(".html","");if(!ticker||ticker.includes("?")){const urlParams=new URLSearchParams(link.href);ticker=urlParams.get("symbol")||ticker}
if(!ticker)return;const formattedTicker=`NSE:${ticker}`;const wrapper=document.createElement('span');wrapper.className='ticker-link-wrapper';wrapper.style.display='inline-flex';wrapper.style.alignItems='center';if(link.parentNode){link.parentNode.insertBefore(wrapper,link);wrapper.appendChild(link)}
const emojiBtn=document.createElement("span");emojiBtn.textContent="ðŸ“‹";emojiBtn.className="emoji-copy-btn";emojiBtn.style.cursor="pointer";emojiBtn.style.marginLeft="4px";emojiBtn.style.fontSize="0.9em";emojiBtn.title=`Copy ${formattedTicker}`;emojiBtn.onclick=(event)=>{event.stopPropagation();event.preventDefault();const textarea=document.createElement("textarea");textarea.value=formattedTicker;document.body.appendChild(textarea);textarea.select();document.execCommand("copy");document.body.removeChild(textarea);chrome.storage.local.set({lastCopiedTickers:[formattedTicker]});emojiBtn.textContent="âœ…";setTimeout(()=>(emojiBtn.textContent="ðŸ“‹"),1500)};wrapper.appendChild(emojiBtn)})}
function clickBullishScannerCopyButton(){try{if(!window.location.href.includes("/dashboard/")){console.warn("Not on Chartink dashboard page.");return!1}
const panelHeaders=document.querySelectorAll('div[data-v-0c4502f5].flex.border-b');let bullishPanel=null;for(const header of panelHeaders){if(header.textContent&&header.textContent.includes('Bullish')){bullishPanel=header.closest('div[data-v-0c4502f5].flex.border-b.dark\\:border-nightfall-navy');break}}
if(!bullishPanel){console.warn("Bullish scanner panel not found.");return!1}
let container=bullishPanel.parentElement;if(!container){console.warn("Bullish scanner container not found.");return!1}
const copyButton=container.querySelector('div[title="Copy widget"]');if(copyButton){copyButton.click();console.log("Clicked the Copy widget button in bullish scanner.");return!0}
console.warn("Could not find the copy button in the bullish scanner.");return!1}catch(error){console.error("Error clicking bullish scanner copy button:",error);return!1}}
chrome.runtime.onMessage.addListener((request,sender,sendResponse)=>{if(request.message==="clickBullishScannerCopyButton"){const success=clickBullishScannerCopyButton();sendResponse({success:success});return!0}
return!1})